name: CI - Build and Test

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

env:
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    
    steps:
    - name: üîÑ Checkout code
      uses: actions/checkout@v4
      
    - name: üê≥ Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      
    - name: üîß Create data directory
      run: |
        mkdir -p data
        chmod 755 data
      
    - name: üèóÔ∏è Build Docker images
      run: |
        echo "Building Docker Compose services..."
        docker-compose build --no-cache
        
    - name: üì¶ Check built images
      run: |
        echo "Listing built images:"
        docker images | grep mvp
        
    - name: üöÄ Start services
      run: |
        echo "Starting services in background..."
        docker-compose up -d
        
    - name: ‚è≥ Wait for services to be ready
      run: |
        echo "Waiting for services to start..."
        sleep 30
        
        echo "Checking container status:"
        docker-compose ps
        
        echo "Checking container logs:"
        docker-compose logs scraper-service
        docker-compose logs storage-service
        
    - name: üîç Health checks
      run: |
        echo "Testing service health endpoints..."
        
        # Wait a bit more for services to be fully ready
        sleep 10
        
        # Test Storage Service Health
        echo "Testing Storage Service health..."
        for i in {1..5}; do
          if curl -f http://localhost:8002/health; then
            echo "‚úÖ Storage Service is healthy"
            break
          else
            echo "‚è≥ Storage Service not ready, attempt $i/5"
            sleep 5
          fi
        done
        
        # Test Scraper Service Health
        echo "Testing Scraper Service health..."
        for i in {1..5}; do
          if curl -f http://localhost:8001/health; then
            echo "‚úÖ Scraper Service is healthy"
            break
          else
            echo "‚è≥ Scraper Service not ready, attempt $i/5"
            sleep 5
          fi
        done
        
    - name: üß™ Test API endpoints
      run: |
        echo "Testing API endpoints..."
        
        # Test Storage Service endpoints
        echo "Testing Storage Service..."
        curl -X GET http://localhost:8002/health | jq '.'
        curl -X GET http://localhost:8002/results | jq '.'
        
        # Test Scraper Service endpoints  
        echo "Testing Scraper Service..."
        curl -X GET http://localhost:8001/health | jq '.'
        curl -X GET http://localhost:8001/ | jq '.'
        
    - name: üî¨ Test bike search functionality
      run: |
        echo "Testing bike search API..."
        
        # Test auto search endpoint
        echo "Testing auto search..."
        response=$(curl -s -X GET http://localhost:8001/search/auto)
        echo "Auto search response: $response"
        
        # Wait for search to process
        echo "Waiting for search to complete..."
        sleep 15
        
        # Check storage for results
        echo "Checking stored results..."
        curl -X GET http://localhost:8002/results | jq '.'
        
    - name: üìä Service logs and metrics
      run: |
        echo "=== FINAL SERVICE STATUS ==="
        docker-compose ps
        
        echo "=== SCRAPER SERVICE LOGS ==="
        docker-compose logs --tail=50 scraper-service
        
        echo "=== STORAGE SERVICE LOGS ==="  
        docker-compose logs --tail=50 storage-service
        
        echo "=== CONTAINER RESOURCE USAGE ==="
        docker stats --no-stream
        
    - name: üßπ Cleanup
      if: always()
      run: |
        echo "Stopping and cleaning up..."
        docker-compose down -v
        docker system prune -f
